---
format: html
editor: visual
---

```{r}
library(ggplot2)
```

Cargar los datos en un dataframe llamado: airbnb

```{r}
airbnb<-read.csv('data//airbnb.csv',sep = ',', stringsAsFactors = T)
```

Mostrar las primeras 6 filas del dataframe

```{r}
library(dplyr)
airbnb %>% slice(1:6)
```

Renombrar las columnas de la siguiente forma:

| Nombre original        | Nuevo nombre   |
|------------------------|----------------|
| Zipcode                | CodigoPostal   |
| Neighbourhood.Cleansed | Barrio         |
| Property.Type          | TipoPropiedad  |
| Room.Type              | TipoAlquiler   |
| Accommodates           | MaxOcupantes   |
| Bathrooms              | NumBanyos      |
| Bedrooms               | NumDormitorios |
| Beds                   | NumCamas       |
| Bed.Type               | TipoCama       |
| Amenities              | Comodidades    |
| Square.Feet            | PiesCuadrados  |
| Price                  | Precio         |
| Review.Scores.Rating   | Puntuacion     |

```{r}
names(airbnb)[names(airbnb) == "Zipcode"] <- "CodigoPostal"
names(airbnb)[names(airbnb) == "Neighbourhood.Cleansed"] <- "Barrio"
names(airbnb)[names(airbnb) == "Property.Type"] <- "TipoPropiedad"
names(airbnb)[names(airbnb) == "Room.Type"] <- "TipoAlquiler"
names(airbnb)[names(airbnb) == "Accommodates"] <- "MaxOcupantes"
names(airbnb)[names(airbnb) == "Bathrooms"] <- "NumBanyos"
names(airbnb)[names(airbnb) == "Bedrooms"] <- "NumDormitorios"
names(airbnb)[names(airbnb) == "Beds"] <- "NumCamas"
names(airbnb)[names(airbnb) == "Bed.Type"] <- "TipoCama"
names(airbnb)[names(airbnb) == "Amenities"] <- "Comodidades"
names(airbnb)[names(airbnb) == "Square.Feet"] <-"PiesCuadrados"
names(airbnb)[names(airbnb) == "Price"] <- "Precio"
names(airbnb)[names(airbnb) == "Review.Scores.Rating"] <- "Puntuacion"
```

```{r}
View(airbnb)
```

Crea una nueva columna llamada MetrosCuadrados a partir de la columna PiesCuadrados.

Ayuda: 1 pie cuadrado son 0,092903 metros cuadrdados

```{r}
airbnb$MetrosCuadrados <- airbnb$PiesCuadrados * 0.092903
```

Miremos el código postal. Es una variable con entradas erroneas. Hay valores como '','-' y '28' que deberían ser considerados como NA. Así mismo también debería ser NA todos los que no comiencen por 28, ya que estamos con códigos postales de Madrid

```{r}
airbnb[which(airbnb$CodigoPostal==","), "CodigoPostal"] <- NA
airbnb[which(airbnb$CodigoPostal=="-"), "CodigoPostal"] <- NA
airbnb[which(airbnb$CodigoPostal=="28"), "CodigoPostal"] <- NA
```

```{r}
#Replace zipcodes that do not start with 28 with NA
airbnb[!grepl("^28", airbnb$CodigoPostal), "CodigoPostal"] <- NA

```

```{r}
#Check to see if it worked
not_28 <- grep("^[^2][^8]", airbnb$CodigoPostal)
```

```{r}
length(not_28)
```

```{r}
airbnb[which(airbnb$CodigoPostal=="-"),]
```

El código postal 28002, 28004 y 28051 tienen entradas repetidas. Por ejemplo las entradas 28002\n20882 deberían ir dentro de 28002

```{r}
table(airbnb$CodigoPostal)
```

El codigo 2804 debería ser 28004, 2805 deberia ser 28005 y 2815 junto con 2815 debería ser 28015

```{r}
#Limpiamos un poquito los zip codes
airbnb[which(airbnb$CodigoPostal=="2804"), "CodigoPostal"] <- 28004
airbnb[which(airbnb$CodigoPostal=="2805"), "CodigoPostal"] <- 28005
airbnb[which(airbnb$CodigoPostal=="2815"), "CodigoPostal"] <- 28015
airbnb[which(airbnb$CodigoPostal=="Madrid 28004"), "CodigoPostal"] <- 28004
airbnb[which(airbnb$CodigoPostal=="28002\n28002"), "CodigoPostal"] <- 28002
airbnb[which(airbnb$CodigoPostal=="28051\n28051"), "CodigoPostal"] <- 28051
```

```{r}
droplevels(airbnb$CodigoPostal)
#Esto no me queda claro, si hago el drop levels y luego llamo a table, aun me salen los valores que se supone que he quitado con el drop levels
```

Limpia los datos de la columna Codigo Postal

Una vez limpios los datos ¿Cuales son los códigos postales que tenemos?

```{r}
#show zip codes 
table(airbnb$CodigoPostal)
```

¿Cuales son los 5 códigos postales con más entradas? ¿Y con menos? ¿Cuantas entradas tienen?

```{r}
#sort de más a menos
cp_count <- sort(table(airbnb$CodigoPostal), decreasing = TRUE)
#sacar los top 5
top_5 <- head(cp_count, n = 5)
print("Los cinco codigos postales con más entradas son:")
print(top_5)
```

```{r}
#sort de menos a más
cp_count <- sort(table(airbnb$CodigoPostal), increasing = TRUE)
#sacar los top 5
top_5 <- head(cp_count, n = 5)
print("Los cinco codigos postales con menos entradas son:")
print(top_5)
```

¿Cuales son los barrios que hay en el código postal 28012?

```{r}
barrios_28012 <- airbnb[which(airbnb$CodigoPostal== "28012"),]
barrios <- unique(barrios_28012$Barrio)
print(barrios)
```

¿Cuantas entradas hay en cada uno de esos barrios para el codigo postal 28012?

```{r}
#show barrios distintos
table(barrios)
```

¿Cuantos barrios hay en todo el dataset airbnb? ¿Cuales son?

```{r}
#ver barrios distintos
barrios_distintos <- unique(airbnb$Barrio)
#contar numero de barrios distintos
cuantos_barrios <- length(barrios_distintos)
print("El número de barrios en el dataset es:")
print(cuantos_barrios)
```

```{r}
#Cuales son los barrios
table(airbnb$Barrio)
```

¿Cuales son los 5 barrios que tienen mayor número entradas?

```{r}
#sort de menos a más
barrio_top_5 <- sort(table(airbnb$Barrio), decreasing = TRUE)
#sacar los top 5
top_5 <- head(barrio_top_5, n = 5)
print("Los cinco barrios con más entradas son:")
print(top_5)
```

¿Cuantos Tipos de Alquiler diferentes hay? ¿Cuales son? ¿Cuantas entradas en el dataframe hay por cada tipo?

```{r}
#ver tipos de alquileres distintos
alquileres_distintos <- unique(airbnb$TipoAlquiler)
#contar numero de alquileres distintos
cuantos_tipos <- length(alquileres_distintos)
print("El número de tipos de alquileres distintos es:")
print(cuantos_tipos)
```

```{r}
#tipos de alquileres (1)
print("Los tipos de alquileres son:")
print(alquileres_distintos)
```

```{r}
#tipos de alquileres (2)
table(alquileres_distintos)
```

```{r}
table(airbnb$TipoAlquiler)
```

Muestra el diagrama de cajas del precio para cada uno de los diferentes Tipos de Alquiler

```{r}
summary(Entire_home)
```

```{r}
#Filtrar los datos por tipo de alquiler
Entire_home <- airbnb[airbnb$TipoAlquiler == "Entire home/apt",]
Private_room <- airbnb[airbnb$TipoAlquiler == "Private room",]
Shared_room <- airbnb[airbnb$TipoAlquiler == "Shared room",]
```

```{r}
library(ggplot2)
ggplot(Entire_home, aes(y = Precio)) + geom_boxplot()
```

```{r}
#box plot de precios de pisos con private rooms
ggplot(Private_room, aes(y = Precio)) + geom_boxplot()
```

```{r}
#Box plot de precios de shared rooms
ggplot(Shared_room, aes(y = Precio)) + geom_boxplot()
```

Cual es el precio medio de alquiler de cada uno, la diferencia que hay ¿es estadísticamente significativa? ¿Con que test lo comprobarías?\

```{r}
mean_entire_home <- mean(na.omit(airbnb$Precio[which(airbnb$TipoAlquiler == "Entire home/apt")]))
print(mean_entire_home)
```

```{}
```

```{r}
mean_private_room <- mean(na.omit(airbnb$Precio[which(airbnb$TipoAlquiler == "Private room")]))
print(mean_private_room)
```

```{r}
mean_shared_room <- mean(airbnb$Precio[which(airbnb$TipoAlquiler == "Shared room")])
print(mean_shared_room)
```

```{r}
#calcular la diferencia entre medias

```

Filtra el dataframe cuyos tipo de alquiler sea 'Entire home/apt' y guardalo en un dataframe llamado *airbnb_entire*. Estas serán las entradas que tienen un alquiler del piso completo.

```{r}
airbnb_entire <- airbnb[airbnb$TipoAlquiler == "Entire home/apt",]
head(airbnb_entire)
```

¿Cuales son los 5 barrios que tienen un mayor número de apartamentos enteros en alquiler? Nota: Mirar solo en airbnb_entire. A partir de este punto y hasta que se diga lo contrario partiremos de airbnb_entire.

```{r}
#sort de más a menos
barrios_piso_entero <- sort(table(airbnb_entire$Barrio), decreasing = TRUE)
#sacar los top 5
top_barrios_piso_entero <- head(barrios_piso_entero, n = 5)
print("Los cinco barrios con mayor número de pisos enteros en alquiler son:")
print(top_barrios_piso_entero)

```

¿Cuales son los 5 barrios que tienen un mayor precio medio de alquiler para apartamentos enteros (es decir, del dataframe airbnb_entire)?

¿Cual es su precio medio?

Ayuda: Usa la función aggregate `aggregate(.~colname,df,mean,na.rm=TRUE)`

¿Cuantos apartamentos hay en cada uno de esos barrios?

Mostrar una dataframe con el nombre del barrio, el precio y el número de entradas.

Ayuda: Podeis crear un nuevo dataframe con las columnas "Barrio" y "Freq" que contenga el número de entradas en cada barrio y hacer un merge con el dataframe del punto anterior.

Partiendo del dataframe anterior, muestra los 5 barrios con mayor precio, pero que tengan más de 100 entradas de alquiler.

Dibuja el diagrama de densidad de distribución de los diferentes precios. Serían 5 gráficas, una por cada barrio.

Calcula el tamaño medio, en metros cuadrados, para los 5 barrios anteriores y muestralo en el mismo dataframe junto con el precio y número de entradas

Dibuja el diagrama de densidad de distribución de los diferentes tamaños de apartamentos. Serían 5 gráficas, una por cada barrio.

Esta claro que las medias de metros cuadrados de cada uno de estos 5 barrios parecen ser diferentes, pero ¿son estadísticamente diferentes? ¿Que test habría que usar para comprobarlo?

Para únicamente los pisos de alquiler en el barrio de Sol:

`barrio_sol<-subset(airbnb_entire,Barrio=="Sol")`

Calcular un modelo lineal que combine alguna de estas variables: \* NumBanyos \* NumDormitorios \* MaxOcupantes \* MetrosCuadrados

Primero calculamos la correlación para ver como se relacionan estas variables entre sí.

Se observa que la correlación entre el número de dormitorios y los metros cuadrados es sorprendentemente baja. ¿Son de fiar esos números?

Mediante un histograma o curvas de densidad podemos descartar números que notienen sentido en el dataframe barrio_sol, para tener una matriz de correlación que tenga mayor sentido.

Una vez que hayamos filtrado los datos correspondientes calcular el valor o la combinación de valores que mejor nos permite obtener el precio de un inmueble.

¿Que variable es más fiable para conocer el precio de un inmueble, el número de habitaciones o los metros cuadrados?

Responde con su correspondiente margen de error del 95%, ¿cuantos euros incrementa el precio del alquiler por cada metro cuadrado extra del piso?

Responde con su correspondiente margen de error del 95%, ¿cuantos euros incrementa el precio del alquiler por cada habitación?

¿Cual es la probabilidad de encontrar, en el barrio de Sol, un apartamento en alquiler con 3 dormitorios? ¿Cual es el intervalo de confianza de esa probabilidad?
